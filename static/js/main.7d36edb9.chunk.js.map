{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["DrumButton","buttonId","audioSrc","instrument","onButtonClick","handleKeyDown","event","key","toUpperCase","handleClick","document","getElementById","play","useEffect","window","addEventListener","removeEventListener","Button","id","variant","className","size","onClick","src","App","useState","setInstrument","handleButtonClick","instruID","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8OAmCA,SAASA,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,cAE7CC,EAAgB,SAAAC,GAChBA,EAAMC,IAAIC,eAAiBP,GAC7BQ,KAUJ,SAASA,IACPC,SAASC,eAAeV,GAAUW,OAClCR,EAAcD,GAEhB,OAXAU,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWV,GAE5B,WACLS,OAAOE,oBAAoB,UAAWX,MAEvC,IAMD,eAACY,EAAA,EAAD,CAAQC,GAAE,cAASjB,GAAYkB,QAAQ,YAAYC,UAAU,WAAWC,KAAK,QAAQC,QAASb,EAA9F,UAA4GR,EAAS,uBAAOsB,IAAKrB,EAAUkB,UAAU,OAAOF,GAAIjB,OAIrJuB,MAvDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACRtB,EADQ,KACIuB,EADJ,KAEb,SAASC,EAAkBC,GACzBF,EAAcE,GAEhB,OACI,qBAAKV,GAAG,eAAeE,UAAU,MAAjC,SACE,sBAAKF,GAAG,QAAR,UAEE,qBAAKA,GAAG,UAAR,SACE,4BAAIf,MAGN,sBAAKiB,UAAU,mBAAf,UACE,cAACpB,EAAD,CAAYC,SAAS,IAAIC,SAAS,0DAA0DC,WAAW,UAAUC,cAAeuB,IAChI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,0DAA0DC,WAAW,UAAUC,cAAeuB,IAChI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,0DAA0DC,WAAW,UAAUC,cAAeuB,IAChI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,kEAAkEC,WAAW,SAASC,cAAeuB,IACvI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,0DAA0DC,WAAW,UAAUC,cAAeuB,IAChI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,0DAA0DC,WAAW,YAAYC,cAAeuB,IAClI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,gEAAgEC,WAAW,cAAcC,cAAeuB,IAC1I,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,+DAA+DC,WAAW,aAAaC,cAAeuB,IACxI,cAAC3B,EAAD,CAAYC,SAAS,IAAIC,SAAS,0DAA0DC,WAAW,QAAQC,cAAeuB,aCb3HE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BkB,M","file":"static/js/main.7d36edb9.chunk.js","sourcesContent":["import './App.scss';\nimport Button from '@material-ui/core/Button';\nimport  { useState, useEffect } from 'react';\nfunction App() {\n  let [instrument, setInstrument] = useState('')\n  function handleButtonClick(instruID){\n    setInstrument(instruID)\n  }\n  return (\n      <div id='drum-machine' className=\"App\">\n        <div id='outer'>\n\n          <div id='display'>\n            <p>{instrument}</p>\n          </div>\n\n          <div className='button-container'>\n            <DrumButton buttonId='Q' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3' instrument='Chord-1' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='W' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3' instrument='Chord-2' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='E' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3' instrument='Chord-3' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='A' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3' instrument='Shaker' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='S' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3' instrument='Open-HH' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='D' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3' instrument='Closed-HH' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='Z' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3' instrument='Punchy-Kick' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='X' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3' instrument='Side-Stick' onButtonClick={handleButtonClick}/>\n            <DrumButton buttonId='C' audioSrc='https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3' instrument='Snare' onButtonClick={handleButtonClick}/>\n          </div>\n\n      </div>\n    </div>\n\n  );\n}\n\n\nfunction DrumButton({buttonId, audioSrc, instrument, onButtonClick}) {\n  \n  const handleKeyDown = event => {\n    if (event.key.toUpperCase() == buttonId){\n      handleClick()\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n  function handleClick(){\n    document.getElementById(buttonId).play()\n    onButtonClick(instrument)\n  }\n  return (\n    <Button id={`drum${buttonId}`} variant=\"contained\" className='drum-pad' size=\"large\" onClick={handleClick}>{buttonId}<audio src={audioSrc} className='clip' id={buttonId}></audio></Button>\n  )\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}